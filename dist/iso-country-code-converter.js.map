{"version":3,"sources":["../src/iso-country-code-converter.js"],"names":[],"mappings":"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","file":"iso-country-code-converter.js","sourcesContent":["'use strict';\n\nconst isoCountryCodeConverter = function countryCodeConverter() {\n\n    let fnCountriesArrayLength, fnCheckArgumentIsUndefined, fnNotFoundMessage, fnConvertCodes, fnConvertTwoDigitToThree, fnConvertThreeDigitToTwo;\n\n    const aCountries = [{\n        isoAlpha2Code: 'AF',\n        isoAlpha3Code: 'AFG'\n    }, {\n        isoAlpha2Code: 'AL',\n        isoAlpha3Code: 'ALB'\n    }, {\n        isoAlpha2Code: 'DZ',\n        isoAlpha3Code: 'DZA'\n    }, {\n        isoAlpha2Code: 'AS',\n        isoAlpha3Code: 'ASM'\n    }, {\n        isoAlpha2Code: 'AD',\n        isoAlpha3Code: 'AND'\n    }, {\n        isoAlpha2Code: 'AO',\n        isoAlpha3Code: 'AGO'\n    }, {\n        isoAlpha2Code: 'AI',\n        isoAlpha3Code: 'AIA'\n    }, {\n        isoAlpha2Code: 'AQ',\n        isoAlpha3Code: 'ATA'\n    }, {\n        isoAlpha2Code: 'AG',\n        isoAlpha3Code: 'ATG'\n    }, {\n        isoAlpha2Code: 'AR',\n        isoAlpha3Code: 'ARG'\n    }, {\n        isoAlpha2Code: 'AM',\n        isoAlpha3Code: 'ARM'\n    }, {\n        isoAlpha2Code: 'AW',\n        isoAlpha3Code: 'ABW'\n    }, {\n        isoAlpha2Code: 'AU',\n        isoAlpha3Code: 'AUS'\n    }, {\n        isoAlpha2Code: 'AT',\n        isoAlpha3Code: 'AUT'\n    }, {\n        isoAlpha2Code: 'AZ',\n        isoAlpha3Code: 'AZE'\n    }, {\n        isoAlpha2Code: 'BS',\n        isoAlpha3Code: 'BHS'\n    }, {\n        isoAlpha2Code: 'BH',\n        isoAlpha3Code: 'BHR'\n    }, {\n        isoAlpha2Code: 'BD',\n        isoAlpha3Code: 'BGD'\n    }, {\n        isoAlpha2Code: 'BB',\n        isoAlpha3Code: 'BRB'\n    }, {\n        isoAlpha2Code: 'BY',\n        isoAlpha3Code: 'BLR'\n    }, {\n        isoAlpha2Code: 'BE',\n        isoAlpha3Code: 'BEL'\n    }, {\n        isoAlpha2Code: 'BZ',\n        isoAlpha3Code: 'BLZ'\n    }, {\n        isoAlpha2Code: 'BJ',\n        isoAlpha3Code: 'BEN'\n    }, {\n        isoAlpha2Code: 'BM',\n        isoAlpha3Code: 'BMU'\n    }, {\n        isoAlpha2Code: 'BT',\n        isoAlpha3Code: 'BTN'\n    }, {\n        isoAlpha2Code: 'BO',\n        isoAlpha3Code: 'BOL'\n    }, {\n        isoAlpha2Code: 'BA',\n        isoAlpha3Code: 'BIH'\n    }, {\n        isoAlpha2Code: 'BW',\n        isoAlpha3Code: 'BWA'\n    }, {\n        isoAlpha2Code: 'BV',\n        isoAlpha3Code: 'BVT'\n    }, {\n        isoAlpha2Code: 'BR',\n        isoAlpha3Code: 'BRA'\n    }, {\n        isoAlpha2Code: 'IO',\n        isoAlpha3Code: 'IOT'\n    }, {\n        isoAlpha2Code: 'VG',\n        isoAlpha3Code: 'VGB'\n    }, {\n        isoAlpha2Code: 'BN',\n        isoAlpha3Code: 'BRN'\n    }, {\n        isoAlpha2Code: 'BG',\n        isoAlpha3Code: 'BGR'\n    }, {\n        isoAlpha2Code: 'BF',\n        isoAlpha3Code: 'BFA'\n    }, {\n        isoAlpha2Code: 'BI',\n        isoAlpha3Code: 'BDI'\n    }, {\n        isoAlpha2Code: 'KH',\n        isoAlpha3Code: 'KHM'\n    }, {\n        isoAlpha2Code: 'CM',\n        isoAlpha3Code: 'CMR'\n    }, {\n        isoAlpha2Code: 'CA',\n        isoAlpha3Code: 'CAN'\n    }, {\n        isoAlpha2Code: 'CV',\n        isoAlpha3Code: 'CPV'\n    }, {\n        isoAlpha2Code: 'KY',\n        isoAlpha3Code: 'CYM'\n    }, {\n        isoAlpha2Code: 'CF',\n        isoAlpha3Code: 'CAF'\n    }, {\n        isoAlpha2Code: 'TD',\n        isoAlpha3Code: 'TCD'\n    }, {\n        isoAlpha2Code: 'CL',\n        isoAlpha3Code: 'CHL'\n    }, {\n        isoAlpha2Code: 'CN',\n        isoAlpha3Code: 'CHN'\n    }, {\n        isoAlpha2Code: 'CX',\n        isoAlpha3Code: 'CXR'\n    }, {\n        isoAlpha2Code: 'CC',\n        isoAlpha3Code: 'CCK'\n    }, {\n        isoAlpha2Code: 'CO',\n        isoAlpha3Code: 'COL'\n    }, {\n        isoAlpha2Code: 'KM',\n        isoAlpha3Code: 'COM'\n    }, {\n        isoAlpha2Code: 'CD',\n        isoAlpha3Code: 'COD'\n    }, {\n        isoAlpha2Code: 'CG',\n        isoAlpha3Code: 'COG'\n    }, {\n        isoAlpha2Code: 'CK',\n        isoAlpha3Code: 'COK'\n    }, {\n        isoAlpha2Code: 'CR',\n        isoAlpha3Code: 'CRI'\n    }, {\n        isoAlpha2Code: 'CI',\n        isoAlpha3Code: 'CIV'\n    }, {\n        isoAlpha2Code: 'CU',\n        isoAlpha3Code: 'CUB'\n    }, {\n        isoAlpha2Code: 'CY',\n        isoAlpha3Code: 'CYP'\n    }, {\n        isoAlpha2Code: 'CZ',\n        isoAlpha3Code: 'CZE'\n    }, {\n        isoAlpha2Code: 'DK',\n        isoAlpha3Code: 'DNK'\n    }, {\n        isoAlpha2Code: 'DJ',\n        isoAlpha3Code: 'DJI'\n    }, {\n        isoAlpha2Code: 'DM',\n        isoAlpha3Code: 'DMA'\n    }, {\n        isoAlpha2Code: 'DO',\n        isoAlpha3Code: 'DOM'\n    }, {\n        isoAlpha2Code: 'EC',\n        isoAlpha3Code: 'ECU'\n    }, {\n        isoAlpha2Code: 'EG',\n        isoAlpha3Code: 'EGY'\n    }, {\n        isoAlpha2Code: 'SV',\n        isoAlpha3Code: 'SLV'\n    }, {\n        isoAlpha2Code: 'GQ',\n        isoAlpha3Code: 'GNQ'\n    }, {\n        isoAlpha2Code: 'ER',\n        isoAlpha3Code: 'ERI'\n    }, {\n        isoAlpha2Code: 'EE',\n        isoAlpha3Code: 'EST'\n    }, {\n        isoAlpha2Code: 'ET',\n        isoAlpha3Code: 'ETH'\n    }, {\n        isoAlpha2Code: 'FO',\n        isoAlpha3Code: 'FRO'\n    }, {\n        isoAlpha2Code: 'FK',\n        isoAlpha3Code: 'FLK'\n    }, {\n        isoAlpha2Code: 'FJ',\n        isoAlpha3Code: 'FJI'\n    }, {\n        isoAlpha2Code: 'FI',\n        isoAlpha3Code: 'FIN'\n    }, {\n        isoAlpha2Code: 'FR',\n        isoAlpha3Code: 'FRA'\n    }, {\n        isoAlpha2Code: 'GF',\n        isoAlpha3Code: 'GUF'\n    }, {\n        isoAlpha2Code: 'PF',\n        isoAlpha3Code: 'PYF'\n    }, {\n        isoAlpha2Code: 'TF',\n        isoAlpha3Code: 'ATF'\n    }, {\n        isoAlpha2Code: 'GA',\n        isoAlpha3Code: 'GAB'\n    }, {\n        isoAlpha2Code: 'GM',\n        isoAlpha3Code: 'GMB'\n    }, {\n        isoAlpha2Code: 'GE',\n        isoAlpha3Code: 'GEO'\n    }, {\n        isoAlpha2Code: 'DE',\n        isoAlpha3Code: 'DEU'\n    }, {\n        isoAlpha2Code: 'GH',\n        isoAlpha3Code: 'GHA'\n    }, {\n        isoAlpha2Code: 'GI',\n        isoAlpha3Code: 'GIB'\n    }, {\n        isoAlpha2Code: 'GR',\n        isoAlpha3Code: 'GRC'\n    }, {\n        isoAlpha2Code: 'GL',\n        isoAlpha3Code: 'GRL'\n    }, {\n        isoAlpha2Code: 'GD',\n        isoAlpha3Code: 'GRD'\n    }, {\n        isoAlpha2Code: 'GP',\n        isoAlpha3Code: 'GLP'\n    }, {\n        isoAlpha2Code: 'GU',\n        isoAlpha3Code: 'GUM'\n    }, {\n        isoAlpha2Code: 'GT',\n        isoAlpha3Code: 'GTM'\n    }, {\n        isoAlpha2Code: 'GN',\n        isoAlpha3Code: 'GIN'\n    }, {\n        isoAlpha2Code: 'GW',\n        isoAlpha3Code: 'GNB'\n    }, {\n        isoAlpha2Code: 'GY',\n        isoAlpha3Code: 'GUY'\n    }, {\n        isoAlpha2Code: 'HT',\n        isoAlpha3Code: 'HTI'\n    }, {\n        isoAlpha2Code: 'HM',\n        isoAlpha3Code: 'HMD'\n    }, {\n        isoAlpha2Code: 'VA',\n        isoAlpha3Code: 'VAT'\n    }, {\n        isoAlpha2Code: 'HN',\n        isoAlpha3Code: 'HND'\n    }, {\n        isoAlpha2Code: 'HK',\n        isoAlpha3Code: 'HKG'\n    }, {\n        isoAlpha2Code: 'HR',\n        isoAlpha3Code: 'HRV'\n    }, {\n        isoAlpha2Code: 'HU',\n        isoAlpha3Code: 'HUN'\n    }, {\n        isoAlpha2Code: 'IS',\n        isoAlpha3Code: 'ISL'\n    }, {\n        isoAlpha2Code: 'IN',\n        isoAlpha3Code: 'IND'\n    }, {\n        isoAlpha2Code: 'ID',\n        isoAlpha3Code: 'IDN'\n    }, {\n        isoAlpha2Code: 'IR',\n        isoAlpha3Code: 'IRN'\n    }, {\n        isoAlpha2Code: 'IQ',\n        isoAlpha3Code: 'IRQ'\n    }, {\n        isoAlpha2Code: 'IE',\n        isoAlpha3Code: 'IRL'\n    }, {\n        isoAlpha2Code: 'IL',\n        isoAlpha3Code: 'ISR'\n    }, {\n        isoAlpha2Code: 'IT',\n        isoAlpha3Code: 'ITA'\n    }, {\n        isoAlpha2Code: 'JM',\n        isoAlpha3Code: 'JAM'\n    }, {\n        isoAlpha2Code: 'JP',\n        isoAlpha3Code: 'JPN'\n    }, {\n        isoAlpha2Code: 'JO',\n        isoAlpha3Code: 'JOR'\n    }, {\n        isoAlpha2Code: 'KZ',\n        isoAlpha3Code: 'KAZ'\n    }, {\n        isoAlpha2Code: 'KE',\n        isoAlpha3Code: 'KEN'\n    }, {\n        isoAlpha2Code: 'KI',\n        isoAlpha3Code: 'KIR'\n    }, {\n        isoAlpha2Code: 'KP',\n        isoAlpha3Code: 'PRK'\n    }, {\n        isoAlpha2Code: 'KR',\n        isoAlpha3Code: 'KOR'\n    }, {\n        isoAlpha2Code: 'KW',\n        isoAlpha3Code: 'KWT'\n    }, {\n        isoAlpha2Code: 'KG',\n        isoAlpha3Code: 'KGZ'\n    }, {\n        isoAlpha2Code: 'LA',\n        isoAlpha3Code: 'LAO'\n    }, {\n        isoAlpha2Code: 'LV',\n        isoAlpha3Code: 'LVA'\n    }, {\n        isoAlpha2Code: 'LB',\n        isoAlpha3Code: 'LBN'\n    }, {\n        isoAlpha2Code: 'LS',\n        isoAlpha3Code: 'LSO'\n    }, {\n        isoAlpha2Code: 'LR',\n        isoAlpha3Code: 'LBR'\n    }, {\n        isoAlpha2Code: 'LY',\n        isoAlpha3Code: 'LBY'\n    }, {\n        isoAlpha2Code: 'LI',\n        isoAlpha3Code: 'LIE'\n    }, {\n        isoAlpha2Code: 'LT',\n        isoAlpha3Code: 'LTU'\n    }, {\n        isoAlpha2Code: 'LU',\n        isoAlpha3Code: 'LUX'\n    }, {\n        isoAlpha2Code: 'MO',\n        isoAlpha3Code: 'MAC'\n    }, {\n        isoAlpha2Code: 'MK',\n        isoAlpha3Code: 'MKD'\n    }, {\n        isoAlpha2Code: 'MG',\n        isoAlpha3Code: 'MDG'\n    }, {\n        isoAlpha2Code: 'MW',\n        isoAlpha3Code: 'MWI'\n    }, {\n        isoAlpha2Code: 'MY',\n        isoAlpha3Code: 'MYS'\n    }, {\n        isoAlpha2Code: 'MV',\n        isoAlpha3Code: 'MDV'\n    }, {\n        isoAlpha2Code: 'ML',\n        isoAlpha3Code: 'MLI'\n    }, {\n        isoAlpha2Code: 'MT',\n        isoAlpha3Code: 'MLT'\n    }, {\n        isoAlpha2Code: 'MH',\n        isoAlpha3Code: 'MHL'\n    }, {\n        isoAlpha2Code: 'MQ',\n        isoAlpha3Code: 'MTQ'\n    }, {\n        isoAlpha2Code: 'MR',\n        isoAlpha3Code: 'MRT'\n    }, {\n        isoAlpha2Code: 'MU',\n        isoAlpha3Code: 'MUS'\n    }, {\n        isoAlpha2Code: 'YT',\n        isoAlpha3Code: 'MYT'\n    }, {\n        isoAlpha2Code: 'MX',\n        isoAlpha3Code: 'MEX'\n    }, {\n        isoAlpha2Code: 'FM',\n        isoAlpha3Code: 'FSM'\n    }, {\n        isoAlpha2Code: 'MD',\n        isoAlpha3Code: 'MDA'\n    }, {\n        isoAlpha2Code: 'MC',\n        isoAlpha3Code: 'MCO'\n    }, {\n        isoAlpha2Code: 'MN',\n        isoAlpha3Code: 'MNG'\n    }, {\n        isoAlpha2Code: 'MS',\n        isoAlpha3Code: 'MSR'\n    }, {\n        isoAlpha2Code: 'MA',\n        isoAlpha3Code: 'MAR'\n    }, {\n        isoAlpha2Code: 'MZ',\n        isoAlpha3Code: 'MOZ'\n    }, {\n        isoAlpha2Code: 'MM',\n        isoAlpha3Code: 'MMR'\n    }, {\n        isoAlpha2Code: 'NA',\n        isoAlpha3Code: 'NAM'\n    }, {\n        isoAlpha2Code: 'NR',\n        isoAlpha3Code: 'NRU'\n    }, {\n        isoAlpha2Code: 'NP',\n        isoAlpha3Code: 'NPL'\n    }, {\n        isoAlpha2Code: 'AN',\n        isoAlpha3Code: 'ANT'\n    }, {\n        isoAlpha2Code: 'NL',\n        isoAlpha3Code: 'NLD'\n    }, {\n        isoAlpha2Code: 'NC',\n        isoAlpha3Code: 'NCL'\n    }, {\n        isoAlpha2Code: 'NZ',\n        isoAlpha3Code: 'NZL'\n    }, {\n        isoAlpha2Code: 'NI',\n        isoAlpha3Code: 'NIC'\n    }, {\n        isoAlpha2Code: 'NE',\n        isoAlpha3Code: 'NER'\n    }, {\n        isoAlpha2Code: 'NG',\n        isoAlpha3Code: 'NGA'\n    }, {\n        isoAlpha2Code: 'NU',\n        isoAlpha3Code: 'NIU'\n    }, {\n        isoAlpha2Code: 'NF',\n        isoAlpha3Code: 'NFK'\n    }, {\n        isoAlpha2Code: 'MP',\n        isoAlpha3Code: 'MNP'\n    }, {\n        isoAlpha2Code: 'NO',\n        isoAlpha3Code: 'NOR'\n    }, {\n        isoAlpha2Code: 'OM',\n        isoAlpha3Code: 'OMN'\n    }, {\n        isoAlpha2Code: 'PK',\n        isoAlpha3Code: 'PAK'\n    }, {\n        isoAlpha2Code: 'PW',\n        isoAlpha3Code: 'PLW'\n    }, {\n        isoAlpha2Code: 'PS',\n        isoAlpha3Code: 'PSE'\n    }, {\n        isoAlpha2Code: 'PA',\n        isoAlpha3Code: 'PAN'\n    }, {\n        isoAlpha2Code: 'PG',\n        isoAlpha3Code: 'PNG'\n    }, {\n        isoAlpha2Code: 'PY',\n        isoAlpha3Code: 'PRY'\n    }, {\n        isoAlpha2Code: 'PE',\n        isoAlpha3Code: 'PER'\n    }, {\n        isoAlpha2Code: 'PH',\n        isoAlpha3Code: 'PHL'\n    }, {\n        isoAlpha2Code: 'PN',\n        isoAlpha3Code: 'PCN'\n    }, {\n        isoAlpha2Code: 'PL',\n        isoAlpha3Code: 'POL'\n    }, {\n        isoAlpha2Code: 'PT',\n        isoAlpha3Code: 'PRT'\n    }, {\n        isoAlpha2Code: 'PR',\n        isoAlpha3Code: 'PRI'\n    }, {\n        isoAlpha2Code: 'QA',\n        isoAlpha3Code: 'QAT'\n    }, {\n        isoAlpha2Code: 'RE',\n        isoAlpha3Code: 'REU'\n    }, {\n        isoAlpha2Code: 'RO',\n        isoAlpha3Code: 'ROU'\n    }, {\n        isoAlpha2Code: 'RU',\n        isoAlpha3Code: 'RUS'\n    }, {\n        isoAlpha2Code: 'RW',\n        isoAlpha3Code: 'RWA'\n    }, {\n        isoAlpha2Code: 'SH',\n        isoAlpha3Code: 'SHN'\n    }, {\n        isoAlpha2Code: 'KN',\n        isoAlpha3Code: 'KNA'\n    }, {\n        isoAlpha2Code: 'LC',\n        isoAlpha3Code: 'LCA'\n    }, {\n        isoAlpha2Code: 'PM',\n        isoAlpha3Code: 'SPM'\n    }, {\n        isoAlpha2Code: 'VC',\n        isoAlpha3Code: 'VCT'\n    }, {\n        isoAlpha2Code: 'WS',\n        isoAlpha3Code: 'WSM'\n    }, {\n        isoAlpha2Code: 'SM',\n        isoAlpha3Code: 'SMR'\n    }, {\n        isoAlpha2Code: 'ST',\n        isoAlpha3Code: 'STP'\n    }, {\n        isoAlpha2Code: 'SA',\n        isoAlpha3Code: 'SAU'\n    }, {\n        isoAlpha2Code: 'SN',\n        isoAlpha3Code: 'SEN'\n    }, {\n        isoAlpha2Code: 'CS',\n        isoAlpha3Code: 'SCG'\n    }, {\n        isoAlpha2Code: 'SC',\n        isoAlpha3Code: 'SYC'\n    }, {\n        isoAlpha2Code: 'SL',\n        isoAlpha3Code: 'SLE'\n    }, {\n        isoAlpha2Code: 'SG',\n        isoAlpha3Code: 'SGP'\n    }, {\n        isoAlpha2Code: 'SK',\n        isoAlpha3Code: 'SVK'\n    }, {\n        isoAlpha2Code: 'SI',\n        isoAlpha3Code: 'SVN'\n    }, {\n        isoAlpha2Code: 'SB',\n        isoAlpha3Code: 'SLB'\n    }, {\n        isoAlpha2Code: 'SO',\n        isoAlpha3Code: 'SOM'\n    }, {\n        isoAlpha2Code: 'ZA',\n        isoAlpha3Code: 'ZAF'\n    }, {\n        isoAlpha2Code: 'GS',\n        isoAlpha3Code: 'SGS'\n    }, {\n        isoAlpha2Code: 'ES',\n        isoAlpha3Code: 'ESP'\n    }, {\n        isoAlpha2Code: 'LK',\n        isoAlpha3Code: 'LKA'\n    }, {\n        isoAlpha2Code: 'SD',\n        isoAlpha3Code: 'SDN'\n    }, {\n        isoAlpha2Code: 'SR',\n        isoAlpha3Code: 'SUR'\n    }, {\n        isoAlpha2Code: 'SJ',\n        isoAlpha3Code: 'SJM'\n    }, {\n        isoAlpha2Code: 'SZ',\n        isoAlpha3Code: 'SWZ'\n    }, {\n        isoAlpha2Code: 'SE',\n        isoAlpha3Code: 'SWE'\n    }, {\n        isoAlpha2Code: 'CH',\n        isoAlpha3Code: 'CHE'\n    }, {\n        isoAlpha2Code: 'SY',\n        isoAlpha3Code: 'SYR'\n    }, {\n        isoAlpha2Code: 'TW',\n        isoAlpha3Code: 'TWN'\n    }, {\n        isoAlpha2Code: 'TJ',\n        isoAlpha3Code: 'TJK'\n    }, {\n        isoAlpha2Code: 'TZ',\n        isoAlpha3Code: 'TZA'\n    }, {\n        isoAlpha2Code: 'TH',\n        isoAlpha3Code: 'THA'\n    }, {\n        isoAlpha2Code: 'TL',\n        isoAlpha3Code: 'TLS'\n    }, {\n        isoAlpha2Code: 'TG',\n        isoAlpha3Code: 'TGO'\n    }, {\n        isoAlpha2Code: 'TK',\n        isoAlpha3Code: 'TKL'\n    }, {\n        isoAlpha2Code: 'TO',\n        isoAlpha3Code: 'TON'\n    }, {\n        isoAlpha2Code: 'TT',\n        isoAlpha3Code: 'TTO'\n    }, {\n        isoAlpha2Code: 'TN',\n        isoAlpha3Code: 'TUN'\n    }, {\n        isoAlpha2Code: 'TR',\n        isoAlpha3Code: 'TUR'\n    }, {\n        isoAlpha2Code: 'TM',\n        isoAlpha3Code: 'TKM'\n    }, {\n        isoAlpha2Code: 'TC',\n        isoAlpha3Code: 'TCA'\n    }, {\n        isoAlpha2Code: 'TV',\n        isoAlpha3Code: 'TUV'\n    }, {\n        isoAlpha2Code: 'VI',\n        isoAlpha3Code: 'VIR'\n    }, {\n        isoAlpha2Code: 'UG',\n        isoAlpha3Code: 'UGA'\n    }, {\n        isoAlpha2Code: 'UA',\n        isoAlpha3Code: 'UKR'\n    }, {\n        isoAlpha2Code: 'AE',\n        isoAlpha3Code: 'ARE'\n    }, {\n        isoAlpha2Code: 'GB',\n        isoAlpha3Code: 'GBR'\n    }, {\n        isoAlpha2Code: 'UM',\n        isoAlpha3Code: 'UMI'\n    }, {\n        isoAlpha2Code: 'US',\n        isoAlpha3Code: 'USA'\n    }, {\n        isoAlpha2Code: 'UY',\n        isoAlpha3Code: 'URY'\n    }, {\n        isoAlpha2Code: 'UZ',\n        isoAlpha3Code: 'UZB'\n    }, {\n        isoAlpha2Code: 'VU',\n        isoAlpha3Code: 'VUT'\n    }, {\n        isoAlpha2Code: 'VE',\n        isoAlpha3Code: 'VEN'\n    }, {\n        isoAlpha2Code: 'VN',\n        isoAlpha3Code: 'VNM'\n    }, {\n        isoAlpha2Code: 'WF',\n        isoAlpha3Code: 'WLF'\n    }, {\n        isoAlpha2Code: 'EH',\n        isoAlpha3Code: 'ESH'\n    }, {\n        isoAlpha2Code: 'YE',\n        isoAlpha3Code: 'YEM'\n    }, {\n        isoAlpha2Code: 'ZM',\n        isoAlpha3Code: 'ZMB'\n    }, {\n        isoAlpha2Code: 'ZW',\n        isoAlpha3Code: 'ZWE'\n    }];\n\n    fnCountriesArrayLength = () => {\n        if (aCountries === undefined || aCountries.length === 0) {\n            throw new Error('aCountries problem. Check it!');\n        }\n        return aCountries.length;\n    };\n\n    fnCheckArgumentIsUndefined = argument => {\n        if (argument === undefined) {\n            console.log('Warning: could not converted because the input was undefined');\n            return true;\n        }\n    };\n\n    fnNotFoundMessage = () => {\n        console.log('Country not found in the array, returning original...');\n    };\n\n    fnConvertCodes = sDigit => {\n        var i = 0,\n            iFound = false,\n            sIsoCode = 'isoAlpha3Code',\n            sReturnIsoCode = 'isoAlpha2Code';\n\n        if (fnCheckArgumentIsUndefined(sDigit)) {\n            return;\n        }\n        if (sDigit.length === 2) {\n            sIsoCode = 'isoAlpha2Code';\n            sReturnIsoCode = 'isoAlpha3Code';\n        }\n\n        sDigit = sDigit.toUpperCase();\n        for (i; i < fnCountriesArrayLength(); i++) {\n            if (aCountries[i][sIsoCode] === sDigit) {\n                iFound = true;\n                return aCountries[i][sReturnIsoCode];\n            }\n        }\n        if (!iFound) {\n            fnNotFoundMessage();\n            return sDigit;\n        }\n    };\n\n    fnConvertTwoDigitToThree = sTwoDigit => {\n        return fnConvertCodes(sTwoDigit);\n    };\n\n    fnConvertThreeDigitToTwo = sThreeDigit => {\n        return fnConvertCodes(sThreeDigit);\n    };\n\n    return {\n        convertTwoDigitToThree: fnConvertTwoDigitToThree,\n        convertThreeDigitToTwo: fnConvertThreeDigitToTwo\n    };\n\n}();\n\nexports.isoCountryCodeConverter = isoCountryCodeConverter;"]}